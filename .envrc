# Check whether we are using Nix, because this changes how we get rustup and
# the Python dependencies
if [ -x "$(command -v nix-shell)" ] && [ -f "shell.nix" ]; then
  USE_NIX=1
else
  USE_NIX=0
fi

if [ "$USE_NIX" -eq 1 ]; then
  use nix

  # This emulates layout pipenv
  # With Nix it's pretty painful to use Python packages with compiled bits...
  layout python3
  pip install \
         Vose-Alias-Method \
         cprofilev \
         ipython \
         pyblock \
         pytest \
         pytest-datadir \
         randomgen \
         setuptools-rust \
         zarr

  gtags --gtagslabel=ctags
else
  # Check whether rustup is around and install it otherwise
  if ! [ -x "$(command -v rustup)" ]; then
    # Install
    # * silently (-y)
    # * without modifying PATH (--no-modify-path)
    # * without installing any toolcahin (--default-toolchain none)
    curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain none
    # Add to PATH
    source $HOME/.cargo/env
  fi

  layout pipenv
fi

# Set default to a recent enough nightly
# PyO3 requires at least 1.34.0-nightly 2019-02-06
rustup default nightly-2019-02-07
# Install RLS for code completion
rustup component add rls-preview rust-analysis rust-src rustfmt-preview
