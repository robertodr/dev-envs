# Use Nix, if it's around, to get rustup
if [ -x "$(command -v nix-shell)" ]; then
  use nix
fi

export CARGO_HOME="$(direnv_layout_dir)/.cargo"

# Check whether rustup is around and install it otherwise
if ! [ -x "$(command -v rustup)" ]; then
  export RUSTUP_HOME="$(direnv_layout_dir)/.rustup"
  # Install
  # * silently (-y)
  # * without modifying PATH (--no-modify-path)
  # * without installing any toolcahin (--default-toolchain none)
  curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain none
  # Add to PATH
  source "$CARGO_HOME"/env
else
  PATH_add "$CARGO_HOME"/bin
fi

# Set default to a recent enough nightly
# PyO3 requires at least 1.34.0-nightly 2019-02-06
rustup default nightly-2019-04-20
# Install RLS for code completion
rustup component add rls-preview rust-analysis rust-src rustfmt-preview
# Install additional packages locally
for pkg in pyo3-pack; do
   if ! [ -x "$CARGO_HOME/bin/$pkg" ]; then
     cargo install $pkg
   fi
done

# Now the Python dependencies
layout pipenv
